{"remainingRequest":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/App.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/App.vue","mtime":1615203093540},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js","mtime":1613482309608},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1613482313073}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvc2FtYXJ0aC5ndS9EZXNrdG9wL0Zyb250ZW5kL1JlZGRpdC1Qcm90b3R5cGUtRnJvbnRlbmQvcmVkZGl0LWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IFBvc3RzIGZyb20gJy4vY29tcG9uZW50cy9GZWVkcy9Qb3N0cyc7CmltcG9ydCBTaWRlYmFyIGZyb20gJy4vY29tcG9uZW50cy9TaWRlYmFyL1NpZGViYXInOwppbXBvcnQgQ2FyZHMgZnJvbSAnLi9jb21wb25lbnRzL1RvcGJhci9DYXJkcyc7CmltcG9ydCBOYXZiYXIgZnJvbSAnLi9jb21wb25lbnRzL05hdmJhci9BdXRoJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy8gaW1wb3J0IFZ1ZUF4aW9zIGZyb20gJ3Z1ZS1heGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBjb21wb25lbnRzOiB7CiAgICBQb3N0czogUG9zdHMsCiAgICBTaWRlYmFyOiBTaWRlYmFyLAogICAgQ2FyZHM6IENhcmRzLAogICAgTmF2YmFyOiBOYXZiYXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0czogW10sCiAgICAgIHZvdGVkUG9zdHM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgdm90ZTogZnVuY3Rpb24gdm90ZSh2b3RlcywgaW5kZXgsIGFkZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzdWx0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvY29udGVudC92b3RlL3VzZXIvJyArIGxvY2FsU3RvcmFnZS51c2VySWQgKyAnL2NvbnRlbnQvJyArIF90aGlzLnBvc3RzW2luZGV4XS5pZCArICc/YWRkPScgKyBhZGQpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMucG9zdHNbaW5kZXhdLnZvdGVzICs9IHJlc3VsdC5kYXRhOwogICAgICAgICAgICAgICAgX3RoaXMucG9zdHNbaW5kZXhdLnVzZXJWb3RlICs9IHJlc3VsdC5kYXRhOwoKICAgICAgICAgICAgICAgIF90aGlzLmVtaXR0ZXIuZW1pdCgncG9zdFZvdGUnKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgcmVzdWx0LCByZXMsIGtleSwgcG9zdCwgZm91bmQsIHZvdGVkOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpL2NvbnRlbnQvLTEnKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBfdGhpczIucG9zdHMgPSByZXN1bHQuZGF0YTsKCiAgICAgICAgICAgICAgaWYgKCEobG9jYWxTdG9yYWdlLmlzQXV0aGVudGljYXRlZCA9PT0gInRydWUiKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyODsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA3OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvVXNlckNvbnRlbnQvJyArIGxvY2FsU3RvcmFnZS51c2VySWQpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIF90aGlzMi52b3RlZFBvc3RzID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAga2V5ID0gInVzZXJWb3RlIjsKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSByZWdlbmVyYXRvclJ1bnRpbWUua2V5cyhfdGhpczIucG9zdHMpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBpZiAoKF9jb250ZXh0Mi50MSA9IF9jb250ZXh0Mi50MCgpKS5kb25lKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBwb3N0ID0gX2NvbnRleHQyLnQxLnZhbHVlOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzMi5wb3N0c1twb3N0XS5pZCk7CiAgICAgICAgICAgICAgZm91bmQgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MiA9IHJlZ2VuZXJhdG9yUnVudGltZS5rZXlzKF90aGlzMi52b3RlZFBvc3RzKTsKCiAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgaWYgKChfY29udGV4dDIudDMgPSBfY29udGV4dDIudDIoKSkuZG9uZSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyNDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdm90ZWQgPSBfY29udGV4dDIudDMudmFsdWU7CgogICAgICAgICAgICAgIGlmICghKF90aGlzMi5wb3N0c1twb3N0XS5pZCA9PT0gX3RoaXMyLnZvdGVkUG9zdHNbdm90ZWRdLmNvbnRlbnRJZCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjI7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF90aGlzMi5wb3N0c1twb3N0XVtrZXldID0gX3RoaXMyLnZvdGVkUG9zdHNbdm90ZWRdLnZvdGVzOwogICAgICAgICAgICAgIGZvdW5kID0gMTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgiYnJlYWsiLCAyNCk7CgogICAgICAgICAgICBjYXNlIDIyOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDI0OgogICAgICAgICAgICAgIGlmIChmb3VuZCA9PT0gMCkgX3RoaXMyLnBvc3RzW3Bvc3RdW2tleV0gPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzMi5wb3N0cyk7CgogICAgICAgICAgICBjYXNlIDI4OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<div class=\"navbar\">\n\t\t\t<Navbar></Navbar>\n\t\t</div>\n\t\t<div class=\"lower\">\n\t\t\t<div class=\"cards-container\">\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"cards-title\">Trending today</div>\n\t\t\t\t</div>\n\t\t\t\t<Cards></Cards>\n\t\t\t</div>\n\t\t\t<div class=\"bottom\">\n\t\t\t\t<Posts @vote=\"vote\" :posts=\"posts\" :votedPosts=\"votedPosts\"/>\n\t\t\t\t<div class=\"sidebar\">\n\t\t\t\t\t<Sidebar></Sidebar>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Posts from './components/Feeds/Posts'\nimport Sidebar from './components/Sidebar/Sidebar'\nimport Cards from './components/Topbar/Cards'\nimport Navbar from './components/Navbar/Auth'\nimport axios from 'axios'\n// import VueAxios from 'vue-axios'\n\nexport default {\n\tname: 'App',\n\tcomponents: {\n\t\tPosts,\n\t\tSidebar,\n\t\tCards,\n\t\tNavbar,\n\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tposts: [],\n\t\t\tvotedPosts: [], \n\t\t}\n\t},\n\tmethods: {\n\t\tasync vote(votes, index, add) {\n\t\t\tconst result = await axios\n\t\t\t.post('http://localhost:8080/api/content/vote/user/'+localStorage.userId+'/content/'+this.posts[index].id+'?add='+add)\n\t\t\tthis.posts[index].votes += result.data;\n\t\t\tthis.posts[index].userVote += result.data;\n\t\t\tthis.emitter.emit('postVote')\n\t\t},\n\t},\n\tasync mounted(){\n\t\t\n\t\tconst result = await axios\n\t\t.get('http://localhost:8080/api/content/-1')\n\t\tthis.posts = result.data;\n\n\t\tif(localStorage.isAuthenticated === \"true\"){\n\t\t\t\n\t\tconst res = await axios\n\t\t.get('http://localhost:8080/api/UserContent/'+localStorage.userId)\n\t\tthis.votedPosts = res.data\n\n        const key = \"userVote\"\n\t\tfor(var post in this.posts){\n\t\t\tconsole.log(this.posts[post].id)\n\t\t\t\tvar found = 0;\n\t\t\t\tfor(var voted in this.votedPosts){\n\t\t\t\t\tif(this.posts[post].id=== this.votedPosts[voted].contentId){\n\t\t\t\t\t\tthis.posts[post][key] = this.votedPosts[voted].votes;\n\t\t\t\t\t\tfound = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t   }\n\t\t\t   if(found === 0)\n\t\t\t   this.posts[post][key] = 0;\n\t\t\t}\n\t\t\tconsole.log(this.posts)\n\t\t}\n\t}\n}\n</script>\n\n<style >\nhtml, body {\n  margin: 0px !important;\n  padding: 0px !important;\n}\n#app {\n\tfont-family: IBMPlexSans, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: #2c3e50;\n\tbackground:\t#DAE0E6;\n}\n.bottom {\n\tdisplay: flex;\n\tjustify-content: center;\n\tpadding-left:165px;\n\tpadding-right:250px;\n}\n.sidebar {\n\tpadding-top: 20px;\n\tpadding-left: 0px;\n}\n.navbar{\n\tbackground-color: white;\n\tflex: 0;\n\tleft: 0;\n\tposition: fixed;\n\tright: 0;\n\ttop: 0;\n\tz-index: 80;\n\tmargin-top: 0;\n\theight: 48px;\n\tdisplay: inline-flex;\n\tflex-direction: row;\n\talign-items: center;\n}\n.cards-container {\n\tmargin: 0px 186px 0px 186px;\n\tpadding: 16px 24px 0;\n}\n.cards-title {\n\ttext-align: left;\n\tfont-family: IBMPlexSans, Arial, sans-serif;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tline-height: 18px;\n\tpadding: 0 16px 10px;\n}\n.lower {\n\tpadding-top: 48px;\n}\nbutton{\n\tborder: 0;\n\toutline: 0;\n}\n</style>\n"],"sourceRoot":""}]}