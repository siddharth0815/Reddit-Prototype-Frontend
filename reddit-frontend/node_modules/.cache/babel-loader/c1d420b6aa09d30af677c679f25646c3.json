{"remainingRequest":"/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js!/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TopCommunities.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TopCommunities.vue","mtime":1613504670630},{"path":"/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613504663537},{"path":"/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js","mtime":1613504663332},{"path":"/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613504663537},{"path":"/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1613504668450}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3Jpc2hhYmguc2luZ2gvRGVza3RvcC9SZWRkaXQtUHJvdG90eXBlLUZyb250ZW5kL3JlZGRpdC1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBUb3BJdGVtIGZyb20gIi4vVG9wSXRlbSI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVG9wQ29tbXVuaXRpZXMnLAogIGNvbXBvbmVudHM6IHsKICAgIFRvcEl0ZW06IFRvcEl0ZW0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb21tdW5pdGllczogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS9jb21tdW5pdHkvdG9wP2NvdW50PTUnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gX3RoaXMuY29tbXVuaXRpZXMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cHZvdGU6IGZ1bmN0aW9uIHVwdm90ZShpbmRleCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCEobG9jYWxTdG9yYWdlLmlzQXV0aGVudGljYXRlZCA9PT0gInRydWUiKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS9jb21tdW5pdHkvdXB2b3RlLycgKyBfdGhpczIuY29tbXVuaXRpZXNbaW5kZXhdLmlkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF90aGlzMi5jb21tdW5pdGllc1tpbmRleF0udXB2b3RlcysrOwogICAgICAgICAgICAgICAgaWYgKGluZGV4ICE9IDAgJiYgX3RoaXMyLmNvbW11bml0aWVzW2luZGV4XS51cHZvdGVzID4gX3RoaXMyLmNvbW11bml0aWVzW2luZGV4IC0gMV0udXB2b3RlcykgX3RoaXMyLiRlbWl0KCJmb3JjZVJlcmVuZGVyIik7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBhbGVydCgiUGxlYXNlIFNpZ25JbiIpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZG93bnZvdGU6IGZ1bmN0aW9uIGRvd252b3RlKGluZGV4KSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICghKGxvY2FsU3RvcmFnZS5pc0F1dGhlbnRpY2F0ZWQgPT09ICJ0cnVlIikpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS9jb21tdW5pdHkvZG93bnZvdGUvJyArIF90aGlzMy5jb21tdW5pdGllc1tpbmRleF0uaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3RoaXMzLmNvbW11bml0aWVzW2luZGV4XS5kb3dudm90ZXMrKzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBhbGVydCgiUGxlYXNlIFNpZ25JbiIpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/rishabh.singh/Desktop/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TopCommunities.vue"],"names":[],"mappings":";;AAcA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACd,EAAA,IAAI,EAAE,gBADQ;AAEd,EAAA,UAAU,EAAE;AACX,IAAA,OAAM,EAAN;AADW,GAFE;AAKd,EAAA,IALc,kBAKP;AACN,WAAO;AACN,MAAA,WAAW,EAAE;AADP,KAAP;AAGA,GATa;AAUd,EAAA,OAVc,qBAUJ;AAAA;;AACT,IAAA,KAAI,CACH,GADD,CACK,iDADL,EAEC,IAFD,CAEO,UAAA,QAAO;AAAA,aAAM,KAAI,CAAC,WAAL,GAAmB,QAAQ,CAAC,IAAlC;AAAA,KAFd;AAGA,GAda;AAed,EAAA,OAAO,EAAE;AACF,IAAA,MADE,kBACK,KADL,EACY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACf,YAAY,CAAC,eAAb,KAAiC,MADlB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEZ,KAAI,CACT,IADK,CACA,gDAA8C,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,EADtE,EAEL,IAFK,CAEA,UAAA,QAAO;AAAA,yBAAM,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAN;AAAA,iBAFP,CAFY;;AAAA;AAKlB,gBAAA,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,OAAxB;AACA,oBAAI,KAAI,IAAK,CAAT,IAAc,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,OAAxB,GAAkC,MAAI,CAAC,WAAL,CAAiB,KAAK,GAAC,CAAvB,EAA0B,OAA9E,EACC,MAAI,CAAC,KAAL,CAAW,eAAX;AAPiB;AAAA;;AAAA;AAUlB,gBAAA,KAAK,CAAC,eAAD,CAAL;;AAVkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYnB,KAbO;AAcF,IAAA,QAdE,oBAcO,KAdP,EAcc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACjB,YAAY,CAAC,eAAb,KAAiC,MADhB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEd,KAAI,CACT,IADK,CACA,kDAAgD,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,EADxE,EAEL,IAFK,CAEA,UAAA,QAAO;AAAA,yBAAM,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAN;AAAA,iBAFP,CAFc;;AAAA;AAKpB,gBAAA,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,SAAxB;AALoB;AAAA;;AAAA;AAQpB,gBAAA,KAAK,CAAC,eAAD,CAAL;;AARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUtB;AAxBQ;AAfK,CAAf","sourcesContent":["<template>\n\t<div id=\"topCommunities\">\n\t\t<div class=\"header\">\n\t\t\t<h2 class=\"banner\"> Top Communities </h2>\n\t\t</div>\n\t\t<ol>\n\t\t\t<li class=\"list\" :key=\"item.id\" v-for=\"(item,index) in communities\">\n\t\t\t\t<TopItem :item=\"item\" :index=\"index\" @upvote=\"upvote\" @downvote=\"downvote\"></TopItem>\n\t\t\t</li>\n\t\t</ol>\n\t</div>\n</template>\n\n<script>\nimport TopItem from \"./TopItem\"\nimport axios from 'axios'\n\nexport default {\n\tname: 'TopCommunities',\n\tcomponents: {\n\t\tTopItem\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcommunities: null\n\t\t}\n\t},\n\tmounted() {\n\t\taxios\n\t\t.get('http://localhost:8080/api/community/top?count=5')\n\t\t.then( response => (this.communities = response.data) )\n\t},\n\tmethods: {\n\t\tasync upvote(index) {\n\t\t\tif( localStorage.isAuthenticated === \"true\" ) {\n\t\t\t\tawait axios\n\t\t\t\t.post('http://localhost:8080/api/community/upvote/'+this.communities[index].id)\n\t\t\t\t.then(response => (console.log(response)));\n\t\t\t\tthis.communities[index].upvotes++;\n\t\t\t\tif( index != 0 && this.communities[index].upvotes > this.communities[index-1].upvotes )\n\t\t\t\t\tthis.$emit(\"forceRerender\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\talert(\"Please SignIn\");\n\t\t\t}\n\t\t},\n\t\tasync downvote(index) {\n\t\t\tif( localStorage.isAuthenticated === \"true\" ) {\n\t\t\t\tawait axios\n\t\t\t\t.post('http://localhost:8080/api/community/downvote/'+this.communities[index].id)\n\t\t\t\t.then(response => (console.log(response)));\n\t\t\t\tthis.communities[index].downvotes++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\talert(\"Please SignIn\");\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<style>\n#topCommunities {\n\tbackground-color: white;\n\tcolor: #1a1a1b;\n\tfill: #1a1a1b;\n\tborder: 1px solid #ccc;\n\tborder-radius: 4px;\n\toverflow: visible;\n\tjustify-content: center;\n\tmargin-bottom: 50px;\n}\n.list {\n\tborder-bottom: thin solid #edeff1;\n}\n.header {\n\tbackground-color: #0079d3;\n    background-position: 50%;\n    background-repeat: no-repeat;\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n    height: 80px;\n    position: relative;\n}\n.banner {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 20px;\n    bottom: 8px;\n    color: #fff;\n    left: 16px;\n    position: absolute;\n    vertical-align: baseline;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    line-height: 20px;\n}\n</style>"],"sourceRoot":""}]}