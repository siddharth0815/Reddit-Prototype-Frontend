{"remainingRequest":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js!/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue","mtime":1615154187043},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3NpZGRoYXJ0aC5hZ2EvRGVza3RvcC9KYXZhLXByb2plY3RzL1JlZGRpdC1mcm9udGVuZC9SZWRkaXQtUHJvdG90eXBlLUZyb250ZW5kL3JlZGRpdC1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBUcmVuZGluZ0l0ZW0gZnJvbSAiLi9UcmVuZGluZ0l0ZW0iOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwp2YXIgdXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUcmVuZGluZ0NvbW11bml0aWVzJywKICBjb21wb25lbnRzOiB7CiAgICBUcmVuZGluZ0l0ZW06IFRyZW5kaW5nSXRlbQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbW11bml0aWVzOiBudWxsLAogICAgICBzaG93TG9naW5Nb2RhbDogZmFsc2UsCiAgICAgIGlzQXV0aGVudGljYXRlZDogZmFsc2UKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBheGlvcy5nZXQodXJsICsgJ2NvbW11bml0eS90cmVuZGluZz9jb3VudD01JykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIF90aGlzLmNvbW11bml0aWVzID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgZm9sbG93OiBmdW5jdGlvbiBmb2xsb3codXNlcklkLCBjb21tdW5pdHlJZCwgaW5kZXgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShsb2NhbFN0b3JhZ2UuaXNBdXRoZW50aWNhdGVkID09PSAidHJ1ZSIpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KHVybCArICdjb21tdW5pdHkvZm9sbG93L3VzZXIvJyArIHVzZXJJZCArICcvY29tbXVuaXR5LycgKyBjb21tdW5pdHlJZCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgIF90aGlzMi5jb21tdW5pdGllc1tpbmRleF0ubWVtYmVycysrOwogICAgICAgICAgICAgICAgYWxlcnQoIkpvaW5lZCBDb21tdW5pdHkgU3VjY2Vzc2Z1bGx5ISIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgYWxlcnQoIlVzZXIgYWxyZWFkeSBleGlzdHMgaW4gY29tbXVuaXR5Iik7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIF90aGlzMi5zaG93TG9naW5Nb2RhbEZ1bmMoKTsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNob3dMb2dpbk1vZGFsRnVuYzogZnVuY3Rpb24gc2hvd0xvZ2luTW9kYWxGdW5jKCkgewogICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgiTG9naW5Nb2RhbCIpOwogICAgfSwKICAgIHRvZ2dsZUlzQXV0aGVudGljYXRlZDogZnVuY3Rpb24gdG9nZ2xlSXNBdXRoZW50aWNhdGVkKCkgewogICAgICB0aGlzLmlzQXV0aGVudGljYXRlZCA9ICF0aGlzLmlzQXV0aGVudGljYXRlZDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue"],"names":[],"mappings":";;AAcA,OAAO,YAAP,MAAyB,gBAAzB;AAEA,OAAO,KAAP,MAAkB,OAAlB;AAEA,IAAM,GAAE,GAAI,4BAAZ;AAEA,eAAe;AACd,EAAA,IAAI,EAAE,qBADQ;AAEd,EAAA,UAAU,EAAE;AACX,IAAA,YAAY,EAAZ;AADW,GAFE;AAOd,EAAA,IAPc,kBAOP;AACN,WAAO;AACN,MAAA,WAAW,EAAE,IADP;AAEN,MAAA,cAAc,EAAE,KAFV;AAGN,MAAA,eAAe,EAAE;AAHX,KAAP;AAKA,GAba;AAcd,EAAA,OAdc,qBAcJ;AAAA;;AACT,IAAA,KAAI,CACH,GADD,CACK,GAAG,GAAC,4BADT,EAEC,IAFD,CAEO,UAAA,QAAO;AAAA,aAAM,KAAI,CAAC,WAAL,GAAmB,QAAQ,CAAC,IAAlC;AAAA,KAFd;AAGA,GAlBa;AAmBd,EAAA,OAAO,EAAE;AACF,IAAA,MADE,kBACK,MADL,EACa,WADb,EAC0B,KAD1B,EACiC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACpC,YAAY,CAAC,eAAb,KAAiC,MADG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAGf,KAAI,CAC1B,IADsB,CACjB,GAAG,GAAC,wBAAJ,GAA6B,MAA7B,GAAoC,aAApC,GAAkD,WADjC,CAHe;;AAAA;AAGhC,gBAAA,QAHgC;AAKtC,gBAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,gBAAA,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,OAAxB;AACA,gBAAA,KAAK,CAAC,gCAAD,CAAL;AAPsC;AAAA;;AAAA;AAAA;AAAA;AAUtC,gBAAA,KAAK,CAAC,kCAAD,CAAL;;AAVsC;AAAA;AAAA;;AAAA;AAcvC,gBAAA,MAAI,CAAC,kBAAL;;AAduC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBxC,KAjBO;AAkBR,IAAA,kBAlBQ,gCAkBY;AACnB,WAAK,OAAL,CAAa,IAAb,CAAkB,YAAlB;AACA,KApBO;AAqBR,IAAA,qBArBQ,mCAqBgB;AACd,WAAK,eAAL,GAAuB,CAAE,KAAK,eAA9B;AACH;AAvBC;AAnBK,CAAf","sourcesContent":["<template>\n<div>\n\t<div id=\"trendingCommunities\">\n\t\t<ol>\n\t\t\t<li class=\"list\" :key=\"item.id\" v-for=\"(item,index) in communities\">\n\t\t\t\t<TrendingItem :item=\"item\" :index=\"index\" @follow=\"follow\"></TrendingItem>\n\t\t\t</li>\n\t\t</ol>\n\t</div>\n\t\n</div>\n</template>\n\n<script>\nimport TrendingItem from \"./TrendingItem\"\n\nimport axios from 'axios'\n\nconst url = 'http://localhost:8080/api/';\n\nexport default {\n\tname: 'TrendingCommunities',\n\tcomponents: {\n\t\tTrendingItem,\n\t\t\n\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcommunities: null,\n\t\t\tshowLoginModal: false,\n\t\t\tisAuthenticated: false\n\t\t}\n\t},\n\tmounted() {\n\t\taxios\n\t\t.get(url+'community/trending?count=5')\n\t\t.then( response => (this.communities = response.data) );\n\t},\n\tmethods: {\n\t\tasync follow(userId, communityId, index) {\n\t\t\tif( localStorage.isAuthenticated === \"true\" ) {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await axios\n\t\t\t\t\t.post(url+'community/follow/user/'+userId+'/community/'+communityId)\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tthis.communities[index].members++;\n\t\t\t\t\talert(\"Joined Community Successfully!\")\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\talert(\"User already exists in community\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showLoginModalFunc()\n\t\t\t}\n\t\t},\n\t\tshowLoginModalFunc(){\n\t\t\tthis.emitter.emit(\"LoginModal\")\n\t\t},\n\t\ttoggleIsAuthenticated() {\n            this.isAuthenticated = !(this.isAuthenticated);\n        },\n\n\n\t}\n}\n</script>\n\n<style scoped>\n#trendingCommunities {\n\tbackground-color: white;\n\tcolor: #1a1a1b;\n\tfill: #1a1a1b;\n\tborder: 1px solid #ccc;\n\tborder-radius: 4px;\n\toverflow: visible;\n}\n.list {\n\tborder-bottom: thin solid #edeff1;\n}\nli {\n\tdisplay: list-item;\n}\nol {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n}\n</style>\n"],"sourceRoot":""}]}