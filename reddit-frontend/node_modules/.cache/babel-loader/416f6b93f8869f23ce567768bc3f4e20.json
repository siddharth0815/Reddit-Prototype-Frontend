{"remainingRequest":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue","mtime":1615116206794},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js","mtime":1613482309608},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1613482313073}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3NhbWFydGguZ3UvRGVza3RvcC9Gcm9udGVuZC9SZWRkaXQtUHJvdG90eXBlLUZyb250ZW5kL3JlZGRpdC1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBUcmVuZGluZ0l0ZW0gZnJvbSAiLi9UcmVuZGluZ0l0ZW0iOwppbXBvcnQgTG9naW5Nb2RhbCBmcm9tICIuLi9Nb2RhbC9Mb2dpbk1vZGFsIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHVybCA9ICdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpLyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHJlbmRpbmdDb21tdW5pdGllcycsCiAgY29tcG9uZW50czogewogICAgVHJlbmRpbmdJdGVtOiBUcmVuZGluZ0l0ZW0sCiAgICBMb2dpbk1vZGFsOiBMb2dpbk1vZGFsCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29tbXVuaXRpZXM6IG51bGwsCiAgICAgIHNob3dMb2dpbk1vZGFsOiBmYWxzZSwKICAgICAgaXNBdXRoZW50aWNhdGVkOiBmYWxzZQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGF4aW9zLmdldCh1cmwgKyAnY29tbXVuaXR5L3RyZW5kaW5nP2NvdW50PTUnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gX3RoaXMuY29tbXVuaXRpZXMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBmb2xsb3c6IGZ1bmN0aW9uIGZvbGxvdyh1c2VySWQsIGNvbW11bml0eUlkLCBpbmRleCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICghKGxvY2FsU3RvcmFnZS5pc0F1dGhlbnRpY2F0ZWQgPT09ICJ0cnVlIikpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QodXJsICsgJ2NvbW11bml0eS9mb2xsb3cvdXNlci8nICsgdXNlcklkICsgJy9jb21tdW5pdHkvJyArIGNvbW11bml0eUlkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgICAgICAgICAgX3RoaXMyLmNvbW11bml0aWVzW2luZGV4XS5tZW1iZXJzKys7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgYWxlcnQoIlVzZXIgYWxyZWFkeSBleGlzdHMgaW4gY29tbXVuaXR5Iik7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIF90aGlzMi5zaG93TG9naW5Nb2RhbEZ1bmModHJ1ZSk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNob3dMb2dpbk1vZGFsRnVuYzogZnVuY3Rpb24gc2hvd0xvZ2luTW9kYWxGdW5jKHZhbHVlKSB7CiAgICAgIHRoaXMuc2hvd0xvZ2luTW9kYWwgPSB2YWx1ZTsKICAgICAgY29uc29sZS5sb2coInNob3dsb2dpbm1vZGFsZnVuYyIsIHRoaXMuc2hvd0xvZ2luTW9kYWwpOwogICAgfSwKICAgIHRvZ2dsZUlzQXV0aGVudGljYXRlZDogZnVuY3Rpb24gdG9nZ2xlSXNBdXRoZW50aWNhdGVkKCkgewogICAgICB0aGlzLmlzQXV0aGVudGljYXRlZCA9ICF0aGlzLmlzQXV0aGVudGljYXRlZDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue"],"names":[],"mappings":";;AAgBA,OAAO,YAAP,MAAyB,gBAAzB;AACA,OAAO,UAAP,MAAuB,qBAAvB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,IAAM,GAAE,GAAI,4BAAZ;AAEA,eAAe;AACd,EAAA,IAAI,EAAE,qBADQ;AAEd,EAAA,UAAU,EAAE;AACX,IAAA,YAAY,EAAZ,YADW;AAEX,IAAA,UAAS,EAAT;AAFW,GAFE;AAOd,EAAA,IAPc,kBAOP;AACN,WAAO;AACN,MAAA,WAAW,EAAE,IADP;AAEN,MAAA,cAAc,EAAE,KAFV;AAGN,MAAA,eAAe,EAAE;AAHX,KAAP;AAKA,GAba;AAcd,EAAA,OAdc,qBAcJ;AAAA;;AACT,IAAA,KAAI,CACH,GADD,CACK,GAAG,GAAC,4BADT,EAEC,IAFD,CAEO,UAAA,QAAO;AAAA,aAAM,KAAI,CAAC,WAAL,GAAmB,QAAQ,CAAC,IAAlC;AAAA,KAFd;AAGA,GAlBa;AAmBd,EAAA,OAAO,EAAE;AACF,IAAA,MADE,kBACK,MADL,EACa,WADb,EAC0B,KAD1B,EACiC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACpC,YAAY,CAAC,eAAb,KAAiC,MADG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAGf,KAAI,CAC1B,IADsB,CACjB,GAAG,GAAC,wBAAJ,GAA6B,MAA7B,GAAoC,aAApC,GAAkD,WADjC,CAHe;;AAAA;AAGhC,gBAAA,QAHgC;AAKtC,gBAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,gBAAA,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,OAAxB;AANsC;AAAA;;AAAA;AAAA;AAAA;AAStC,gBAAA,KAAK,CAAC,kCAAD,CAAL;;AATsC;AAAA;AAAA;;AAAA;AAavC,gBAAA,MAAI,CAAC,kBAAL,CAAwB,IAAxB;;AAbuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAexC,KAhBO;AAiBR,IAAA,kBAjBQ,8BAiBW,KAjBX,EAiBiB;AACxB,WAAK,cAAL,GAAoB,KAApB;AACS,MAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ,EAAkC,KAAK,cAAvC;AACT,KApBO;AAqBR,IAAA,qBArBQ,mCAqBgB;AACd,WAAK,eAAL,GAAuB,CAAE,KAAK,eAA9B;AACH;AAvBC;AAnBK,CAAf","sourcesContent":["<template>\n<div>\n\t<div id=\"trendingCommunities\">\n\t\t<ol>\n\t\t\t<li class=\"list\" :key=\"item.id\" v-for=\"(item,index) in communities\">\n\t\t\t\t<TrendingItem :item=\"item\" :index=\"index\" @follow=\"follow\"></TrendingItem>\n\t\t\t</li>\n\t\t</ol>\n\t</div>\n\t<div v-if=\"showLoginModal===true\">\n\t\t<LoginModal @showLoginModalFunc=\"showLoginModalFunc\" @toggleIsAuthenticated=\"toggleIsAuthenticated\" :showLoginModal=\"showLoginModal\" :isAuthenticated=\"isAuthenticated\"> </LoginModal>\n\t</div>\n</div>\n</template>\n\n<script>\nimport TrendingItem from \"./TrendingItem\"\nimport LoginModal from \"../Modal/LoginModal\"\nimport axios from 'axios'\n\nconst url = 'http://localhost:8080/api/';\n\nexport default {\n\tname: 'TrendingCommunities',\n\tcomponents: {\n\t\tTrendingItem,\n\t\tLoginModal\n\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcommunities: null,\n\t\t\tshowLoginModal: false,\n\t\t\tisAuthenticated: false\n\t\t}\n\t},\n\tmounted() {\n\t\taxios\n\t\t.get(url+'community/trending?count=5')\n\t\t.then( response => (this.communities = response.data) );\n\t},\n\tmethods: {\n\t\tasync follow(userId, communityId, index) {\n\t\t\tif( localStorage.isAuthenticated === \"true\" ) {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await axios\n\t\t\t\t\t.post(url+'community/follow/user/'+userId+'/community/'+communityId)\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tthis.communities[index].members++;\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\talert(\"User already exists in community\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showLoginModalFunc(true)\n\t\t\t}\n\t\t},\n\t\tshowLoginModalFunc(value){\n\t\t\tthis.showLoginModal=value;\n            console.log(\"showloginmodalfunc\", this.showLoginModal)\n\t\t},\n\t\ttoggleIsAuthenticated() {\n            this.isAuthenticated = !(this.isAuthenticated);\n        },\n\n\n\t}\n}\n</script>\n\n<style>\n#trendingCommunities {\n\tbackground-color: white;\n\tcolor: #1a1a1b;\n\tfill: #1a1a1b;\n\tborder: 1px solid #ccc;\n\tborder-radius: 4px;\n\toverflow: visible;\n}\n.nolinebreak {\n\tdisplay: flex;\n}\n.list {\n\tborder-bottom: thin solid #edeff1;\n}\n</style>\n"],"sourceRoot":""}]}