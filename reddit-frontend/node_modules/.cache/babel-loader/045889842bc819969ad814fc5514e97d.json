{"remainingRequest":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue","mtime":1613549823594},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js","mtime":1613482309608},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1613482313073}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3NhbWFydGguZ3UvRGVza3RvcC9Gcm9udGVuZC9SZWRkaXQtUHJvdG90eXBlLUZyb250ZW5kL3JlZGRpdC1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBUcmVuZGluZ0l0ZW0gZnJvbSAiLi9UcmVuZGluZ0l0ZW0iOwppbXBvcnQgQWxlcnRNb2RhbCBmcm9tICIuLi9Nb2RhbC9BbGVydE1vZGFsIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHVybCA9ICdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpLyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHJlbmRpbmdDb21tdW5pdGllcycsCiAgY29tcG9uZW50czogewogICAgVHJlbmRpbmdJdGVtOiBUcmVuZGluZ0l0ZW0sCiAgICBBbGVydE1vZGFsOiBBbGVydE1vZGFsCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29tbXVuaXRpZXM6IG51bGwsCiAgICAgIHNob3c6IGZhbHNlCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgYXhpb3MuZ2V0KHVybCArICdjb21tdW5pdHkvdHJlbmRpbmc/Y291bnQ9NScpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiBfdGhpcy5jb21tdW5pdGllcyA9IHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZvbGxvdzogZnVuY3Rpb24gZm9sbG93KHVzZXJJZCwgY29tbXVuaXR5SWQsIGluZGV4KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCEobG9jYWxTdG9yYWdlLmlzQXV0aGVudGljYXRlZCA9PT0gInRydWUiKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCh1cmwgKyAnY29tbXVuaXR5L2ZvbGxvdy8nICsgdXNlcklkICsgJy8nICsgY29tbXVuaXR5SWQpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgICAgICAgICBfdGhpczIuY29tbXVuaXRpZXNbaW5kZXhdLm1lbWJlcnMrKzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBhbGVydCgiVXNlciBhbHJlYWR5IGV4aXN0cyBpbiBjb21tdW5pdHkiKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgX3RoaXMyLnNob3dNb2RhbCh0cnVlKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2hvd01vZGFsOiBmdW5jdGlvbiBzaG93TW9kYWwodmFsdWUpIHsKICAgICAgdGhpcy5zaG93ID0gdmFsdWU7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2hvdyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue"],"names":[],"mappings":";;AAgBA,OAAO,YAAP,MAAyB,gBAAzB;AACA,OAAO,UAAP,MAAuB,qBAAvB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,IAAM,GAAE,GAAI,4BAAZ;AAEA,eAAe;AACd,EAAA,IAAI,EAAE,qBADQ;AAEd,EAAA,UAAU,EAAE;AACX,IAAA,YAAY,EAAZ,YADW;AAEX,IAAA,UAAS,EAAT;AAFW,GAFE;AAOd,EAAA,IAPc,kBAOP;AACN,WAAO;AACN,MAAA,WAAW,EAAE,IADP;AAEN,MAAA,IAAI,EAAE;AAFA,KAAP;AAIA,GAZa;AAad,EAAA,OAbc,qBAaJ;AAAA;;AACT,IAAA,KAAI,CACH,GADD,CACK,GAAG,GAAC,4BADT,EAEC,IAFD,CAEO,UAAA,QAAO;AAAA,aAAM,KAAI,CAAC,WAAL,GAAmB,QAAQ,CAAC,IAAlC;AAAA,KAFd;AAGA,GAjBa;AAkBd,EAAA,OAAO,EAAE;AACF,IAAA,MADE,kBACK,MADL,EACa,WADb,EAC0B,KAD1B,EACiC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACpC,YAAY,CAAC,eAAb,KAAiC,MADG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAGf,KAAI,CAC1B,IADsB,CACjB,GAAG,GAAC,mBAAJ,GAAwB,MAAxB,GAA+B,GAA/B,GAAmC,WADlB,CAHe;;AAAA;AAGhC,gBAAA,QAHgC;AAKtC,gBAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,gBAAA,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAAwB,OAAxB;AANsC;AAAA;;AAAA;AAAA;AAAA;AAStC,gBAAA,KAAK,CAAC,kCAAD,CAAL;;AATsC;AAAA;AAAA;;AAAA;AAavC,gBAAA,MAAI,CAAC,SAAL,CAAe,IAAf;;AAbuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAexC,KAhBO;AAiBR,IAAA,SAjBQ,qBAiBE,KAjBF,EAiBQ;AACf,WAAK,IAAL,GAAY,KAAZ;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,IAAjB;AACD;AApBQ;AAlBK,CAAf","sourcesContent":["<template>\n<div>\n\t<div id=\"trendingCommunities\">\n\t\t<ol>\n\t\t\t<li class=\"list\" :key=\"item.id\" v-for=\"(item,index) in communities\">\n\t\t\t\t<TrendingItem :item=\"item\" :index=\"index\" @follow=\"follow\"></TrendingItem>\n\t\t\t</li>\n\t\t</ol>\n\t</div>\n\t<div v-if=\"show===true\">\n\t\t<AlertModal @showModal=\"showModal\" :show=\"show\"></AlertModal>\n\t</div>\n</div>\n</template>\n\n<script>\nimport TrendingItem from \"./TrendingItem\"\nimport AlertModal from \"../Modal/AlertModal\"\nimport axios from 'axios'\n\nconst url = 'http://localhost:8080/api/';\n\nexport default {\n\tname: 'TrendingCommunities',\n\tcomponents: {\n\t\tTrendingItem,\n\t\tAlertModal\n\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcommunities: null,\n\t\t\tshow: false\n\t\t}\n\t},\n\tmounted() {\n\t\taxios\n\t\t.get(url+'community/trending?count=5')\n\t\t.then( response => (this.communities = response.data) );\n\t},\n\tmethods: {\n\t\tasync follow(userId, communityId, index) {\n\t\t\tif( localStorage.isAuthenticated === \"true\" ) {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await axios\n\t\t\t\t\t.post(url+'community/follow/'+userId+'/'+communityId)\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tthis.communities[index].members++;\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\talert(\"User already exists in community\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showModal(true)\n\t\t\t}\n\t\t},\n\t\tshowModal(value){\n\t\t\tthis.show = value\n\t\t\tconsole.log(this.show)\n\t\t}\n\n\t}\n}\n</script>\n\n<style>\n#trendingCommunities {\n\tbackground-color: white;\n\tcolor: #1a1a1b;\n\tfill: #1a1a1b;\n\tborder: 1px solid #ccc;\n\tborder-radius: 4px;\n\toverflow: visible;\n}\n.nolinebreak {\n\tdisplay: flex;\n}\n.list {\n\tborder-bottom: thin solid #edeff1;\n}\n</style>\n"],"sourceRoot":""}]}