{"remainingRequest":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/App.vue","mtime":1615272408925},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cmh0bWwsIGJvZHkgewogIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7CiAgcGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7Cn0KI2FwcCB7Cglmb250LWZhbWlseTogSUJNUGxleFNhbnMsIEFyaWFsLCBzYW5zLXNlcmlmOwoJLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CgktbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOwoJdGV4dC1hbGlnbjogY2VudGVyOwoJY29sb3I6ICMyYzNlNTA7CgliYWNrZ3JvdW5kOgkjREFFMEU2Owp9Ci5ib3R0b20gewoJZGlzcGxheTogZmxleDsKCWp1c3RpZnktY29udGVudDogY2VudGVyOwoJcGFkZGluZy1sZWZ0OjE2NXB4OwoJcGFkZGluZy1yaWdodDoyNTBweDsKfQouc2lkZWJhciB7CglwYWRkaW5nLXRvcDogMjBweDsKCXBhZGRpbmctbGVmdDogMHB4OwoJCn0KLm5hdmJhcnsKCWJhY2tncm91bmQtY29sb3I6IHdoaXRlOwoJZmxleDogMDsKCWxlZnQ6IDA7Cglwb3NpdGlvbjogZml4ZWQ7CglyaWdodDogMDsKCXRvcDogMDsKCXotaW5kZXg6IDgwOwoJbWFyZ2luLXRvcDogMDsKCWhlaWdodDogNDhweDsKCWRpc3BsYXk6IGlubGluZS1mbGV4OwoJZmxleC1kaXJlY3Rpb246IHJvdzsKCWFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmNhcmRzLWNvbnRhaW5lciB7CgltYXJnaW46IDBweCAxODZweCAwcHggMTg2cHg7CglwYWRkaW5nOiAxNnB4IDI0cHggMDsKfQouY2FyZHMtdGl0bGUgewoJdGV4dC1hbGlnbjogbGVmdDsKCWZvbnQtZmFtaWx5OiBJQk1QbGV4U2FucywgQXJpYWwsIHNhbnMtc2VyaWY7Cglmb250LXNpemU6IDE0cHg7Cglmb250LXdlaWdodDogNjAwOwoJbGluZS1oZWlnaHQ6IDE4cHg7CglwYWRkaW5nOiAwIDE2cHggMTBweDsKfQoubG93ZXIgewoJcGFkZGluZy10b3A6IDQ4cHg7Cn0KYnV0dG9uewoJYm9yZGVyOiAwOwoJb3V0bGluZTogMDsKfQo="},{"version":3,"sources":["/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/App.vue"],"names":[],"mappings":"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","file":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<div class=\"navbar\">\n\t\t\t<Navbar></Navbar>\n\t\t</div>\n\t\t<div class=\"lower\">\n\t\t\t<div class=\"cards-container\">\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"cards-title\">Trending today</div>\n\t\t\t\t</div>\n\t\t\t\t<Cards></Cards>\n\t\t\t</div>\n\t\t\t<div class=\"bottom\">\n\t\t\t\t<Posts @vote=\"vote\" @react=\"react\" :posts=\"posts\" :votedPosts=\"votedPosts\"/>\n\t\t\t\t<div class=\"sidebar\">\n\t\t\t\t\t<Sidebar></Sidebar>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Posts from './components/Feeds/Posts'\nimport Sidebar from './components/Sidebar/Sidebar'\nimport Cards from './components/Topbar/Cards'\nimport Navbar from './components/Navbar/Auth'\nimport axios from 'axios'\n// import VueAxios from 'vue-axios'\n\nexport default {\n\tname: 'App',\n\tcomponents: {\n\t\tPosts,\n\t\tSidebar,\n\t\tCards,\n\t\tNavbar,\n\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tposts: [],\n\t\t\tvotedPosts: [], \n\t\t\treactedPosts: [],\n\t\t}\n\t},\n\tmethods: {\n\t\tasync vote(votes, index, add) {\n\t\t\tconst result = await axios\n\t\t\t.post('http://localhost:8080/api/content/vote/user/'+localStorage.userId+'/content/'+this.posts[index].id+'?add='+add)\n\t\t\tthis.posts[index].votes += result.data;\n\t\t\tthis.posts[index].userVote += result.data;\n\t\t\tthis.emitter.emit('postVote')\n\t\t},\n\t\tasync react(postId, reactId, index){\n\t\t\tconsole.log(\"hello react 2\")\n\t\t\tconst result = await axios\n\t\t\t\t.post(\"http://localhost:8080/api/UserContent/react/\"+localStorage.userId+\"/\"+postId+\"/\"+reactId)\n\t\t\t\tconsole.log(result)\n\t\t\tif(result)\t\n\t\t\tthis.posts[index].userReact = reactId;\n\t\t}\n\t},\n\tasync mounted(){\n\t\t\n\t\tconst result = await axios\n\t\t.get('http://localhost:8080/api/content/-1')\n\t\tthis.posts = result.data;\n\n\t\tif(localStorage.isAuthenticated === \"true\"){\n\t\t\t\n\t\tconst res = await axios\n\t\t.get('http://localhost:8080/api/UserContent/'+localStorage.userId)\n\t\tthis.votedPosts = res.data\n\n\t\tconst keyVote = \"userVote\"\n\t\tconst keyReact = \"userReact\"\n\t\tfor(var post in this.posts){\n\t\t\tconsole.log(this.posts[post].id)\n\t\t\t\tvar foundVote = 0;\n\t\t\t\tfor(var voted in this.votedPosts){\n\t\t\t\t\tif(this.posts[post].id=== this.votedPosts[voted].contentId){\n\t\t\t\t\t\tthis.posts[post][keyVote] = this.votedPosts[voted].votes;\n\t\t\t\t\t\tthis.posts[post][keyReact] = this.votedPosts[voted].reaction;\n\t\t\t\t\t\tfoundVote = 1;\n\t\t\t\t\t}\n\t\t\t   }\n\t\t\t   if(foundVote === 0)\n\t\t\t   this.posts[post][keyVote] = 0;\n\t\t\t   if(!this.posts[post][keyReact])\n\t\t\t   this.posts[post][keyReact] = 0;\n\t\t\t}\n\t\t\tconsole.log(this.posts)\n\t\t}\n\t}\n}\n</script>\n\n<style >\nhtml, body {\n  margin: 0px !important;\n  padding: 0px !important;\n}\n#app {\n\tfont-family: IBMPlexSans, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: #2c3e50;\n\tbackground:\t#DAE0E6;\n}\n.bottom {\n\tdisplay: flex;\n\tjustify-content: center;\n\tpadding-left:165px;\n\tpadding-right:250px;\n}\n.sidebar {\n\tpadding-top: 20px;\n\tpadding-left: 0px;\n\t\n}\n.navbar{\n\tbackground-color: white;\n\tflex: 0;\n\tleft: 0;\n\tposition: fixed;\n\tright: 0;\n\ttop: 0;\n\tz-index: 80;\n\tmargin-top: 0;\n\theight: 48px;\n\tdisplay: inline-flex;\n\tflex-direction: row;\n\talign-items: center;\n}\n.cards-container {\n\tmargin: 0px 186px 0px 186px;\n\tpadding: 16px 24px 0;\n}\n.cards-title {\n\ttext-align: left;\n\tfont-family: IBMPlexSans, Arial, sans-serif;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tline-height: 18px;\n\tpadding: 0 16px 10px;\n}\n.lower {\n\tpadding-top: 48px;\n}\nbutton{\n\tborder: 0;\n\toutline: 0;\n}\n</style>\n"]}]}