{"remainingRequest":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Modal/RegisterModal.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Modal/RegisterModal.vue","mtime":1613549979895},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js","mtime":1613482309608},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1613482313073}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdSZWdzaXRlck1vZGFsJywKICAgIHByb3BzOiBbJ3Nob3dSZWdpc3Rlck1vZGFsJ10sCmRhdGEoKQp7CnJldHVybnsKICBzaG93TW9kYWw6IGZhbHNlLAogIHJlZ2lzdGVyVXNlcm5hbWU6IG51bGwsCiAgcmVnaXN0ZXJQYXNzd29yZDogbnVsbCwKICByZWdpc3RlckVtYWlsOiBudWxsLAp9fSwKbWV0aG9kczp7CiAgIHNob3dSZWdpc3Rlck1vZGFsRnVuYygpewogICAgICAgdGhpcy5zaG93TW9kYWwgPSBmYWxzZQogICAgICAgY29uc29sZS5sb2coImNoaWxkIikKICAgICAgIHRoaXMuJGVtaXQoInNob3dSZWdpc3Rlck1vZGFsRnVuYyIsZmFsc2UpCiAgIH0sCiAgIGFzeW5jIHJlZ2lzdGVyU3VibWl0KCkgewoJCQljb25zdCByZXF1ZXN0Qm9keSA9IHsKCQkJCXVzZXJOYW1lOiB0aGlzLnJlZ2lzdGVyVXNlcm5hbWUsCgkJCQlwYXNzd29yZDogdGhpcy5yZWdpc3RlclBhc3N3b3JkLAoJCQkJZW1haWw6IHRoaXMucmVnaXN0ZXJFbWFpbCwKCQkJCWFjdGl2ZTogdHJ1ZSwKICAgICAgICAgICAgfQogICAgICAgICAgICB0cnl7CgkJCWNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3VzZXIvYXV0aC9yZWdpc3RlciIscmVxdWVzdEJvZHkpOwogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgICAgIHRoaXMuc2hvd1JlZ2lzdGVyTW9kYWxGdW5jKCk7CiAgICAgICAgICAgIGFsZXJ0KCJSZWdpc3RyYXRpb24gU3VjY2Vzc2Z1bGwiKQogICAgICAgICAgICB9CiAgICAgICAgICAgIGNhdGNoKGUpewogICAgICAgICAgICAgICAgYWxlcnQoIlVzZXIgQWxyZWFkeSBleGlzdHMhIikKICAgICAgICAgICAgfQogICAgICAgICAgICAKCQl9LAoKfSwKCm1vdW50ZWQoKXsKICAgdGhpcy5zaG93TW9kYWwgPSB0aGlzLnNob3dSZWdpc3Rlck1vZGFsCn0KCn0K"},{"version":3,"sources":["/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Modal/RegisterModal.vue"],"names":[],"mappings":"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","file":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Modal/RegisterModal.vue","sourceRoot":"","sourcesContent":["<template>\n<div >\n<transition name=\"fade\" appear>\n  <div class=\"modal-overlay\" v-if=\"showModal\"></div>\n </transition>\n <transition name=\"slide\" appear>\n  <div class=\"modal\" v-if=\"showModal\">\n   <h2>Sign Up</h2>\n   <form id=\"signup-form\">\n      <!-- name -->\n      <div class=\"field\">\n        <label class=\"label\">Username</label>\n        <input type=\"text\" v-model=\"registerUsername\" class=\"input\">\n      </div>\n\n      <!-- email -->\n      <div class=\"field\">\n        <label class=\"label\">Password</label>\n        <input type=\"password\" v-model=\"registerPassword\" class=\"input\">\n      </div>\n\n      <div class=\"field\">\n        <label class=\"label\">Email</label>\n        <input type=\"email\" v-model=\"registerEmail\" class=\"input\">\n      </div>\n\n      <!-- submit button -->\n      <div class=\"submit-button\">\n        <button type=\"submit\" class=\"button is-danger\" @click=\"registerSubmit\" >Submit</button>\n      </div>\n      </form> \n         <button class=\"button\" @click=\"showRegisterModalFunc()\">\n        Close\n      </button>\n    \n  </div>\n </transition>\n </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n    name: 'RegsiterModal',\n    props: ['showRegisterModal'],\ndata()\n{\nreturn{\n  showModal: false,\n  registerUsername: null,\n  registerPassword: null,\n  registerEmail: null,\n}},\nmethods:{\n   showRegisterModalFunc(){\n       this.showModal = false\n       console.log(\"child\")\n       this.$emit(\"showRegisterModalFunc\",false)\n   },\n   async registerSubmit() {\n\t\t\tconst requestBody = {\n\t\t\t\tuserName: this.registerUsername,\n\t\t\t\tpassword: this.registerPassword,\n\t\t\t\temail: this.registerEmail,\n\t\t\t\tactive: true,\n            }\n            try{\n\t\t\tconst response = await axios.post(\"http://localhost:8080/user/auth/register\",requestBody);\n            console.log(response);\n            this.showRegisterModalFunc();\n            alert(\"Registration Successfull\")\n            }\n            catch(e){\n                alert(\"User Already exists!\")\n            }\n            \n\t\t},\n\n},\n\nmounted(){\n   this.showModal = this.showRegisterModal\n}\n\n}\n</script>\n\n<style scoped>\n.field{\n    padding: 10px;\n}\n.label{\n    padding-right: 10px;\n}\n.field-button{\n display:flex;\n}\n.button {\n appearance: none;\n outline: none;\n border: none;\n background: none;\n cursor: pointer;\n display: inline-block;\n padding: 15px 25px;\n background-image: linear-gradient(to right, #CC2E5D, #FF5858);\n border-radius: 8px;\n \n color: #FFF;\n font-size: 18px;\n font-weight: 700;\n \n box-shadow: 3px 3px rgba(0, 0, 0, 0.4);\n transition: 0.4s ease-out;\n}\n\n.modal-overlay {\n position: absolute;\n top: 0;\n left: 0;\n right: 0;\n bottom: 0;\n z-index: 98;\n background-color: rgba(0, 0, 0, 0.3);\n}\n\n.modal {\n position: fixed;\n top: 50%;\n left: 50%;\n transform: translate(-50%, -50%);\n z-index: 99;\n \n width: 100%;\n max-width: 400px;\n background-color: #FFF;\n border-radius: 16px;\n \n padding: 25px;\n}\n \n h2 {\n  color: #222;\n  font-size: 32px;\n  font-weight: 900;\n  margin-bottom: 15px;\n }\n \n p {\n  color: #666;\n  font-size: 18px;\n  font-weight: 400;\n  margin-bottom: 15px;\n }\n\n.fade-enter-active,\n.fade-leave-active {\n transition: opacity .5s;\n}\n\n.fade-enter,\n.fade-leave-to {\n opacity: 0;\n}\n\n.slide-enter-active,\n.slide-leave-active {\n transition: transform .5s;\n}\n\n.slide-enter,\n.slide-leave-to {\n transform: translateY(-50%) translateX(100vw);\n}\n</style>"]}]}