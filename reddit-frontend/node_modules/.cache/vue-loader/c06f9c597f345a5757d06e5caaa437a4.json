{"remainingRequest":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue","mtime":1615156446632},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/babel-loader/lib/index.js","mtime":1613482309608},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1613482309693},{"path":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1613482313073}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBUcmVuZGluZ0l0ZW0gZnJvbSAiLi9UcmVuZGluZ0l0ZW0iCgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCgpjb25zdCB1cmwgPSAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS8nOwoKZXhwb3J0IGRlZmF1bHQgewoJbmFtZTogJ1RyZW5kaW5nQ29tbXVuaXRpZXMnLAoJY29tcG9uZW50czogewoJCVRyZW5kaW5nSXRlbSwKCQkKCgl9LAoJZGF0YSgpIHsKCQlyZXR1cm4gewoJCQljb21tdW5pdGllczogbnVsbCwKCQkJc2hvd0xvZ2luTW9kYWw6IGZhbHNlLAoJCQlpc0F1dGhlbnRpY2F0ZWQ6IGZhbHNlCgkJfQoJfSwKCW1vdW50ZWQoKSB7CgkJYXhpb3MKCQkuZ2V0KHVybCsnY29tbXVuaXR5L3RyZW5kaW5nP2NvdW50PTUnKQoJCS50aGVuKCByZXNwb25zZSA9PiAodGhpcy5jb21tdW5pdGllcyA9IHJlc3BvbnNlLmRhdGEpICk7Cgl9LAoJbWV0aG9kczogewoJCWFzeW5jIGZvbGxvdyh1c2VySWQsIGNvbW11bml0eUlkLCBpbmRleCkgewoJCQlpZiggbG9jYWxTdG9yYWdlLmlzQXV0aGVudGljYXRlZCA9PT0gInRydWUiICkgewoJCQkJdHJ5IHsKCQkJCQljb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zCgkJCQkJLnBvc3QodXJsKydjb21tdW5pdHkvZm9sbG93L3VzZXIvJyt1c2VySWQrJy9jb21tdW5pdHkvJytjb21tdW5pdHlJZCkKCQkJCQljb25zb2xlLmxvZyhyZXNwb25zZSk7CgkJCQkJdGhpcy5jb21tdW5pdGllc1tpbmRleF0ubWVtYmVycysrOwoJCQkJCWFsZXJ0KCJKb2luZWQgQ29tbXVuaXR5IFN1Y2Nlc3NmdWxseSEiKQoJCQkJfQoJCQkJY2F0Y2goZSkgewoJCQkJCWFsZXJ0KCJVc2VyIGFscmVhZHkgZXhpc3RzIGluIGNvbW11bml0eSIpOwoJCQkJfQoJCQl9CgkJCWVsc2UgewoJCQkJdGhpcy5zaG93TG9naW5Nb2RhbEZ1bmMoKQoJCQl9CgkJfSwKCQlzaG93TG9naW5Nb2RhbEZ1bmMoKXsKCQkJdGhpcy5lbWl0dGVyLmVtaXQoIkxvZ2luTW9kYWwiKQoJCX0sCgkJdG9nZ2xlSXNBdXRoZW50aWNhdGVkKCkgewogICAgICAgICAgICB0aGlzLmlzQXV0aGVudGljYXRlZCA9ICEodGhpcy5pc0F1dGhlbnRpY2F0ZWQpOwogICAgICAgIH0sCgoKCX0KfQo="},{"version":3,"sources":["/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue"],"names":[],"mappings":"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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC;;;CAGR;AACD","file":"/Users/samarth.gu/Desktop/Frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Sidebar/TrendingCommunities.vue","sourceRoot":"","sourcesContent":["<template>\n<div>\n\t<div id=\"trendingCommunities\">\n\t\t<ol>\n\t\t\t<li class=\"list\" :key=\"item.id\" v-for=\"(item,index) in communities\">\n\t\t\t\t<TrendingItem :item=\"item\" :index=\"index\" @follow=\"follow\"></TrendingItem>\n\t\t\t</li>\n\t\t</ol>\n\t</div>\n\t\n</div>\n</template>\n\n<script>\nimport TrendingItem from \"./TrendingItem\"\n\nimport axios from 'axios'\n\nconst url = 'http://localhost:8080/api/';\n\nexport default {\n\tname: 'TrendingCommunities',\n\tcomponents: {\n\t\tTrendingItem,\n\t\t\n\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcommunities: null,\n\t\t\tshowLoginModal: false,\n\t\t\tisAuthenticated: false\n\t\t}\n\t},\n\tmounted() {\n\t\taxios\n\t\t.get(url+'community/trending?count=5')\n\t\t.then( response => (this.communities = response.data) );\n\t},\n\tmethods: {\n\t\tasync follow(userId, communityId, index) {\n\t\t\tif( localStorage.isAuthenticated === \"true\" ) {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await axios\n\t\t\t\t\t.post(url+'community/follow/user/'+userId+'/community/'+communityId)\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tthis.communities[index].members++;\n\t\t\t\t\talert(\"Joined Community Successfully!\")\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\talert(\"User already exists in community\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showLoginModalFunc()\n\t\t\t}\n\t\t},\n\t\tshowLoginModalFunc(){\n\t\t\tthis.emitter.emit(\"LoginModal\")\n\t\t},\n\t\ttoggleIsAuthenticated() {\n            this.isAuthenticated = !(this.isAuthenticated);\n        },\n\n\n\t}\n}\n</script>\n\n<style scoped>\n#trendingCommunities {\n\tbackground-color: white;\n\tcolor: #1a1a1b;\n\tfill: #1a1a1b;\n\tborder: 1px solid #ccc;\n\tborder-radius: 4px;\n\toverflow: visible;\n}\n.list {\n\tborder-bottom: thin solid #edeff1;\n}\nli {\n\tdisplay: list-item;\n}\nol {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n}\n</style>\n"]}]}