{"remainingRequest":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Navbar/Auth.vue?vue&type=style&index=0&id=69c77a32&scoped=true&lang=css","dependencies":[{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Navbar/Auth.vue","mtime":1613467115745},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5uYXZiYXJ7CiAgICBmbG9hdDpyaWdodDsKfQoubG9naW4tYnV0dG9uewogICAgbWFyZ2luLXJpZ2h0OiAyMHB4Owp9Cgo="},{"version":3,"sources":["/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Navbar/Auth.vue"],"names":[],"mappings":";AA0IA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtB","file":"/Users/siddharth.aga/Desktop/Java-projects/Reddit-frontend/Reddit-Prototype-Frontend/reddit-frontend/src/components/Navbar/Auth.vue","sourceRoot":"","sourcesContent":["<template>\n<div class=\"navbar\">\n    <div class=\"auth-buttons\" v-if=\"isAuthenticated===false\">\n        <div class=\"login-register-button\">\n           <button class=\"login-button\" @click=\"showLoginModalFunc()\">Login</button>\n           <button class=\"register-button\" @click=\"showRegisterModalFunc()\">Register</button>\n        </div>\n    </div>\n    <div class=\"logout-button\" v-else>\n        <button class=\"logout-button\" @click=\"handleLogout()\">Logout</button>\n    </div>\n\n           <div id= \"login\" v-if=\"showLoginModal===true && isAuthenticated === false\" class=\"modal\">\n            <div class=\"modalContent\">\n                <div id =\"modalHeader\">\n                    <h2>Login</h2>\n                    <span class=\"close\" @click=\"closeLoginModalFunc()\">&times;</span>\n                </div>\n                <hr>\n                <form id=\"loginForm\" @submit.prevent=\"loginSubmit\">\n                <input type=\"text\" id=\"loginUsername\" v-model=\"loginUsername\" placeholder=\"Username\">\n                <br>\n                <input type=\"password\"  id=\"loginPassword\" v-model=\"loginPassword\" placeholder=\"Password\">\n                <br>\n                <input type=\"submit\" value=\"Login\">\n                </form>\n                <hr>\n            </div>\n        </div>\n            <div id= \"register\" v-if=\"showRegisterModal===true && isAuthenticated === false\" class=\"modal\">\n            <div class=\"modalContent\">\n                <div id =\"modalHeader\">\n                    <h2>Register</h2>\n                    <span class=\"close\" @click=\"closeRegisterModalFunc()\">&times;</span>\n                </div>\n                <hr>\n                <form id=\"registerForm\" @submit.prevent=\"registerSubmit\">\n                <input type=\"text\" id=\"Username\" v-model=\"registerUsername\" placeholder=\"Username\">\n                <br>\n                <input type=\"password\"  id=\"registerPassword\" v-model=\"registerPassword\" placeholder=\"Password\">\n                <br>\n                <input type=\"email\"  id=\"registerEmail\" v-model=\"registerEmail\" placeholder=\"Email\">\n                <br>\n                <input type=\"submit\" value=\"Signup\">\n                </form>\n                <hr>\n            </div>\n        </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n\tname: 'Navbar',\ndata()\n{\nreturn{\n  isAuthenticated: false,\n  userId:null,\n  userName:null,\n  showLoginModal: false,\n  showRegisterModal: false,\n  loginUsername: null,\n  loginPassword: null,\n  registerUsername: null,\n  registerPassword: null,\n  registerEmail: null,\n  \n}},\nmounted(){\n    console.log(\"mounted\")\n    if(localStorage.isAuthenticated != null)\n  this.isAuthenticated = localStorage.isAuthenticated\n  console.log(this.isAuthenticated, false)\n},\nmethods:{\n \n   showLoginModalFunc(){  \n    this.showRegisterModal=false;\n    this.showLoginModal=true;\n   },\n   closeLoginModalFunc(){\n       this.showLoginModal=false;\n   },\n   showRegisterModalFunc(){\n       this.showLoginModal=false;\n    this.showRegisterModal=true;\n   },\n   closeRegisterModalFunc(){\n       this.showRegisterModal=false;\n   },\n   handleLogout(){\n       console.log(\"hello logout\")\n       this.isAuthenticated = false\n       localStorage.isAuthenticated = false\n       localStorage.userName = null \n       localStorage.userId=null\n   },\n   async registerSubmit(){\n       console.log(\"register\")\n   const requestBody = {\n       userName: this.registerUsername,\n       password: this.registerPassword,\n       email: this.registerEmail,\n       active: true,\n   }\n   const response = await axios.post(\"http://localhost:8080/user/auth/register\",requestBody)\n   console.log(response);\n\n   },\n   async loginSubmit(){\n       const requestBody = {\n           userName: this.loginUsername,\n           password: this.loginPassword\n       }\n       try{\n       const response = await axios.post(\"http://localhost:8080/user/auth/login\",requestBody)\n       console.log(response.data);\n       this.isAuthenticated = true\n       localStorage.isAuthenticated = true \n       localStorage.userName = response.data.userName\n       localStorage.userId = response.data.id\n       console.log(localStorage.userName)\n\n       }\n       catch(e){\n           alert(\"Invalid Credentials\")\n       }\n\n   }\n}\n\n}\n\n</script>\n<style scoped>\n.navbar{\n    float:right;\n}\n.login-button{\n    margin-right: 20px;\n}\n\n</style>\n\n"]}]}